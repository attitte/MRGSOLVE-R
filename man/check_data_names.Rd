% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inven.R
\name{check_data_names}
\alias{check_data_names}
\title{Check data set names against model parameters}
\usage{
check_data_names(
  data,
  x,
  check_covariates = TRUE,
  check_input = TRUE,
  tags = NULL,
  strict = FALSE,
  silent = FALSE
)
}
\arguments{
\item{data}{a data frame or other object with names to check.}

\item{x}{a model object.}

\item{check_covariates}{logical; indicates whether or not to check \code{data} for
parameter names carrying the \code{covariates} attribute.}

\item{check_input}{logical; indicates whether or not to check \code{data} for
parameter names carrying the \code{input} attribute.}

\item{tags}{a character vector of parameter tags to require in \code{data}; this
may be a comma- or space-separated string (e.g. \code{"tag1, tag2"}).}

\item{strict}{if \code{TRUE}, then generate an error when \code{data} is missing some
expected column names; otherwise, issue a warning.}

\item{silent}{silences any warning that might have been issued when \code{strict}
is \code{FALSE}.}
}
\description{
When parameters are tagged or labeled in the model specification file, use
this function to check names of input data sets against the tagged
parameters. This is especially useful to alert the user to misspelled or
otherwise misspecified parameter names in input data sets.
}
\details{
By default, \code{data} will be checked for parameters with the \code{covariates} or
\code{input} attributes; these checks can be bypassed with the \code{check_covariates}
and \code{check_input} arguments.
}
\examples{

mod <- mcode("ex-cdn", "$PARAM @input \n CL = 1, KA = 2", compile = FALSE)

data <- expand.evd(amt = 100, cl = 2, KA = 5)

check_data_names(data, mod)

}
