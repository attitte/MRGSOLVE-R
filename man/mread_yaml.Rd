% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mwrite.R
\name{mread_yaml}
\alias{mread_yaml}
\alias{mread_json}
\alias{yaml_to_cpp}
\alias{json_to_cpp}
\title{Read a model from yaml or json format}
\usage{
mread_yaml(file, model = basename(file), project = tempdir(), ...)

mread_json(file, model = basename(file), project = tempdir(), ...)

yaml_to_cpp(file, model = basename(file), project = getwd(), update = TRUE)

json_to_cpp(file, model = basename(file), project = getwd(), update = TRUE)
}
\arguments{
\item{file}{the yaml or json file name.}

\item{model}{a new model name to use when calling \code{mread_yaml} or
\code{mread_json}.}

\item{project}{the directory where the model should be built.}

\item{...}{passed to \code{\link[=mread]{mread()}}.}

\item{update}{\code{TRUE} if model settings should be written into the cpp file in
a \verb{$SET} block.}
}
\value{
A model object.
}
\description{
Read back models written to file using \code{\link[=mwrite_yaml]{mwrite_yaml()}} or \code{\link[=mwrite_json]{mwrite_json()}}.
Functions \code{yaml_to_cpp()} and \code{json_to_cpp()} are also provided to convert
the yaml or json file to mrgsolve cpp file format.
}
\details{
Note that \code{yaml_to_cpp()} and \code{json_to_cpp()} by default write model settings
into the cpp file. \code{mread_yaml()} and \code{mread_json()} do not write model
settings into the file but rather update the model object directly with data
read back from the \code{yaml} or \code{json} file.
}
\examples{
mod <- house()

temp <- tempfile(fileext = ".yaml")

mwrite_yaml(mod, file = temp)

# Note: this model is not compiled
mod <- mread_yaml(temp, model = "new-house", compile = FALSE)
mod

cppfile <- yaml_to_cpp(temp)

readLines(cppfile)

}
